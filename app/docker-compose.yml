# note that 'ports' makes these services available to the host on hostpost:containerport
# later we will want to keep them private via docker 'expose' and just publish specific container ports with 'ports'

services:
  pyserver:
    build: ./pyserver
    ports:
      - "8000:8000"
    depends_on:
      - hapi
    volumes:
      - shared_synthea_data:/synthea/data
      - shared_synthea_modules:/synthea/modules



  rserver:
    build: ./rserver
    ports:
      - "8001:8000"
    depends_on:
      - hapi
    # Run on-demand: docker-compose run rserver

  hapi:
    container_name: hapi
    image: "hapiproject/hapi:latest"
    ports:
      - "8080:8080"
    configs:
      - source: hapi
        target: /app/config/application.yaml
    depends_on:
      - hapi_db

  hapi_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: hapi
    volumes:
      - ./hapi/postgres_data:/var/lib/postgresql/data

  synthea_server:
    build: ./synthea_server
    ports:
      - "8002:8000"
    volumes:
      - ./output:/app/output
      - ./config:/app/config
      - shared_synthea_data:/app
      - shared_synthea_modules:/app/modules

  mlflow_server:
    depends_on:
      - mongo
      - minio
    build: ./mlflow_server
    ports:
      - "8003:8000"


  mongo:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mlflow_server/data/mongo_data:/data/db

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"  # admin console
    command: server /data --console-address ":9001"
    volumes:
      - ./mlflow_server/data/minio_data:/data


configs:
  hapi:
    file: ./hapi/hapi.application.yaml


volumes:
  shared_synthea_data:
  shared_synthea_modules:
  mongo_data:
  minio_data: