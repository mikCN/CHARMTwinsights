# note that 'ports' makes these services available to the host on hostpost:containerport
# later we will want to keep them private via docker 'expose' and just publish specific container ports with 'ports'

services:
  pyserver:
    build: ./pyserver
    ports:
      - "8000:8000"
    depends_on:
      - hapi
    networks:
      - twinsight

  rserver:
    build: ./rserver
    ports:
      - "8001:8000"
    depends_on:
      - hapi
    networks:
      - twinsight


  hapi:
    container_name: hapi
    image: "hapiproject/hapi:latest"
    ports:
      - "8080:8080"
    configs:
      - source: hapi
        target: /app/config/application.yaml
    depends_on:
      - hapi_db
    networks:
      - twinsight


  hapi_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: hapi
    volumes:
      - ./hapi/postgres_data:/var/lib/postgresql/data
    networks:
      - twinsight


  broadsea-atlasdb:
    extends:
      file: ./Broadsea/docker-compose.yml
      service: broadsea-atlasdb
    environment:
      - DOCKER_ARCH=${DOCKER_ARCH:-linux/amd64}
    networks:
      - twinsight

  broadsea-webapi:
    extends:
      file: ./Broadsea/docker-compose.yml
      service: ohdsi-webapi-from-image
    environment:
      - DOCKER_ARCH=${DOCKER_ARCH:-linux/amd64}
    networks:
      - twinsight


configs:
  hapi:
    file: ./hapi/hapi.application.yaml


# allows for overriding the port publishing that Broadsea does for more control
networks:
  twinsight:
    driver: bridge

# most of these are for the Broadsea stack, gotten from this dir's .env, which has them pointing to broadsea_data/secrets
secrets:
  GITHUB_PAT:
    file: ${GITHUB_PAT_SECRET_FILE}
  WEBAPI_DATASOURCE_PASSWORD:
    file: ${WEBAPI_DATASOURCE_PASSWORD_FILE}
  SECURITY_LDAP_SYSTEM_PASSWORD:
    file: ${SECURITY_LDAP_SYSTEM_PASSWORD_FILE}
  SECURITY_DB_DATASOURCE_PASSWORD:
    file: ${SECURITY_DB_DATASOURCE_PASSWORD_FILE}
  SECURITY_AD_SYSTEM_PASSWORD:
    file: ${SECURITY_AD_SYSTEM_PASSWORD_FILE}
  SECURITY_OAUTH_GOOGLE_APISECRET:
    file: ${SECURITY_OAUTH_GOOGLE_APISECRET_FILE}
  SECURITY_OAUTH_FACEBOOK_APISECRET:
    file: ${SECURITY_OAUTH_FACEBOOK_APISECRET_FILE}
  SECURITY_OAUTH_GITHUB_APISECRET:
    file: ${SECURITY_OAUTH_GITHUB_APISECRET_FILE}
  SECURITY_SAML_KEYMANAGER_STOREPASSWORD:
    file: ${SECURITY_SAML_KEYMANAGER_STOREPASSWORD_FILE}
  SECURITY_SAML_KEYMANAGER_PASSWORDS_ARACHNENETWORK:
    file: ${SECURITY_SAML_KEYMANAGER_PASSWORDS_ARACHNENETWORK_FILE}
  HADES_PASSWORD:
    file: ${HADES_PASSWORD_FILE}
  SOLR_VOCAB_JDBC_PASSWORD:
    file: ${SOLR_VOCAB_JDBC_PASSWORD_FILE}
  VOCAB_PG_PASSWORD:
    file: ${VOCAB_PG_PASSWORD_FILE}
  OPENLDAP_ADMIN_PASSWORD:
    file: ${OPENLDAP_ADMIN_PASSWORD_FILE}
  OPENLDAP_ACCOUNT_PASSWORDS:
    file: ${OPENLDAP_ACCOUNT_PASSWORDS_FILE}
  PHOEBE_PG_PASSWORD:
    file: ${PHOEBE_PG_PASSWORD_FILE}
  UMLS_API_KEY:
    file: ${UMLS_API_KEY_FILE}
  CDM_CONNECTIONDETAILS_PASSWORD:
    file: ${CDM_CONNECTIONDETAILS_PASSWORD_FILE}
  WEBAPI_CDM_SNOWFLAKE_PRIVATE_KEY:
    file: ${WEBAPI_CDM_SNOWFLAKE_PRIVATE_KEY_FILE}
  PGADMIN_DEFAULT_PASSWORD:
    file: ${PGADMIN_DEFAULT_PASSWORD_FILE}


  
