#!/bin/bash

## This script pushes synthetic data generated by synthea to the HAPI FHIR server
## Nothing to configure





PROJECT_ROOT="$(git rev-parse --show-toplevel)"

if [ ! -d "$PROJECT_ROOT/tools/output/synthea/fhir" ]; then
  echo "No data found in $PROJECT_ROOT/tools/output/synthea/fhir"
  echo "Please run the synthea_gen_data.sh script first"
  exit 1
fi

# check if hapi is running on localhost:8080
if ! curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/fhir/metadata | grep -q "200"; then
  echo "HAPI FHIR server is not running on localhost:8080"
  echo "Please run the hapi_start.sh script first"
  exit 1
fi

# now we can use curl to push the data to the HAPI FHIR server
# we'll use the -X POST method and the -H "Content-Type: application/fhir+json" header
# NOTE: if there are files that match hospitalInformation* or practitionerInformation*, these need to be handled first

for file in "$PROJECT_ROOT/tools/output/synthea/fhir/"*.json; do
    if [[ $file == *"hospitalInformation"* || $file == *"practitionerInformation"* ]]; then
        echo "Pushing file $(basename $file) to HAPI FHIR server"
        curl -s -o /dev/null -w "%{http_code}" -X POST -H "Content-Type: application/fhir+json" -d "@$file" http://localhost:8080/fhir/
        echo -e "\n"
    fi
done

# now do the ones that don't match
for file in "$PROJECT_ROOT/tools/output/synthea/fhir/"*.json; do
    if [[ $file != *"hospitalInformation"* && $file != *"practitionerInformation"* ]]; then
        echo "Pushing file $(basename $file) to HAPI FHIR server"
        curl -s -o /dev/null -w "%{http_code}" -X POST -H "Content-Type: application/fhir+json" -d "@$file" http://localhost:8080/fhir/
        echo -e "\n"
    fi
done